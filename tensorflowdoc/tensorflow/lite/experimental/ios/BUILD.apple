# TensorFlow Lite for iOS

load("//tensorflow/lite/experimental/ios:ios.bzl", "TFL_MINIMUM_OS_VERSION")
load("@build_bazel_rules_apple//apple:ios.bzl", "ios_static_framework")

package(
    default_visibility = ["//tensorflow/lite/experimental/c:experimental"],
    licenses = ["notice"],  # Apache 2.0
)

TFL_LIBRARY_HDRS = [
    "//tensorflow/lite/delegates/gpu:metal_delegate.h",
    "//tensorflow/lite/experimental/c:c_api.h",
]

TFL_FRAMEWORK_HDRS = TFL_LIBRARY_HDRS + [
    "//tensorflow/lite/experimental/c:c_api_types.h",
]

ios_static_framework(
    name = "TensorFlowLiteC_framework",
    hdrs = TFL_FRAMEWORK_HDRS,
    bundle_name = "TensorFlowLiteC",
    minimum_os_version = TFL_MINIMUM_OS_VERSION,
    deps = [
        ":TensorFlowLiteC",
    ],
)

ios_static_framework(
    name = "TensorFlowLiteCWithSelectTfOps_framework",
    hdrs = TFL_FRAMEWORK_HDRS,
    bundle_name = "TensorFlowLiteC",
    minimum_os_version = TFL_MINIMUM_OS_VERSION,
    deps = [
        ":TensorFlowLiteC",
        "//tensorflow/lite/delegates/flex:delegate",
    ],
)

objc_library(
    name = "TensorFlowLiteC",
    hdrs = TFL_LIBRARY_HDRS,
    module_name = "TensorFlowLiteC",
    weak_sdk_frameworks = [
        "Metal",
    ],
    deps = [
        ":tensorflow_lite_c",
    ],
)

# Using this intermediate target is a workaround for a bug in bazel build rules
# involving mixed objc_library & cc_library deps mentioned in (b/74809458).
# When these dependencies are declared directly under the "TensorFlowLiteC"
# target above, the resulting static library incorrectly contains duplicate
# symbols from some ObjC code in the transitive dependencies.
#
# When a new dependency should be added to the TensorFlowLiteC framework, the
# dependency should be added under this target instead.
# When a new header file needs to be exposed, the header should be added to the
# TFL_LIBRARY_HDRS list above.
cc_library(
    name = "tensorflow_lite_c",
    hdrs = TFL_LIBRARY_HDRS,
    tags = ["nobuilder"],
    deps = [
        "//tensorflow/lite/delegates/gpu:metal_delegate",
        "//tensorflow/lite/experimental/c:c_api",
    ],
)
