// RUN: tf-mlir-translate -hlo-text-to-mlir-hlo %s -o - | FileCheck %s

// This test is more thorough than those of the the other binary ops to test
// their shared functionality.

HloModule main.5

// CHECK-LABEL: func @main
ENTRY %foo.5 (Arg_0.1: f32[4], Arg_1.2: f32[4], Arg_2.3: f32[], Arg_3.4: f32[]) -> f32[4] {
  %Arg_0.1 = f32[4] parameter(0)
  %Arg_1.2 = f32[4] parameter(1)
  %Arg_2.3 = f32[] parameter(2)
  %Arg_3.4 = f32[] parameter(3)

  // Add two tensors
  // CHECK-NEXT: xla_hlo.add %arg0, %arg1
  %add.3 = f32[4] add(f32[4] %Arg_0.1, f32[4] %Arg_1.2)

  // Add two scalars
  // CHECK-NEXT: xla_hlo.add %arg2, %arg3
  %add.4 = f32[] add(f32[] %Arg_2.3, f32[] %Arg_3.4)

  // Add a tensor and scalar
  // CHECK-NEXT: "xla_hlo.add"(%0, %1)
  ROOT %add.5 = f32[4] add(f32[4] %add.3, f32[] %add.4)
}

